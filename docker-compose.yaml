version: '3'

services:
  jellyfish:
    # image: "ghcr.io/jellyfish-dev/jellyfish:${TAG:-edge}"
    build: ../jellyfish/
    restart: unless-stopped
    environment:
      VIRTUAL_HOST: "${JELLYFISH_ADDRESS:-$DOMAIN}"
      USE_INTEGRATED_TURN: "true"
      INTEGRATED_TURN_IP: "${EXTERNAL_IP}"
      INTEGRATED_TURN_LISTEN_IP: "0.0.0.0"
      INTEGRATED_TURN_PORT_RANGE: "50000-50500"
      INTEGRATED_TCP_TURN_PORT: "49999"
      SERVER_API_TOKEN: ${SERVER_API_TOKEN}
      CHECK_ORIGIN: "${CHECK_ORIGIN:-true}"
      PORT: 5002
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
    healthcheck:
      test: >
        curl --fail -H "authorization: Bearer development" http://jellyfish:5002/room || exit 1
      interval: 3s
      retries: 2
      timeout: 2s
      start_period: 30s
    ports:
      - "5002:5002"
      - "49999:49999"
      - "50000-50500:50000-50500/udp"
    networks:
      - jellyfish_network

  frontend:
    build:
      context: ./assets
      dockerfile: ./Dockerfile
      args:
        IS_REVERSY_PROXY_USED: ${IS_REVERSY_PROXY_USED:-false}
        JELLYFISH_ADDRESS: ${JELLYFISH_ADDRESS:-$DOMAIN:5002}
        BACKEND_ADDRESS: ${BACKEND_ADDRESS:-$DOMAIN:5004}
    restart: unless-stopped
    ports:
      - "5005:5005"
    depends_on:
      - backend
      - jellyfish
    networks:
      - jellyfish_network

  backend:
    build:
      context: .
      dockerfile: ./Dockerfile
    environment:
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      JELLYFISH_ADDRESS: ${JELLYFISH_ADDRESS:-jellyfish:5002}
      SECURE_CONNECTION_JELLYFISH: ${SECURE_CONNECTION:-false}
      JELLYFISH_API_TOKEN: ${SERVER_API_TOKEN}
      PHX_SERVER: true
      PHX_HOST: ${BACKEND_ADDRESS:-$DOMAIN}
      PORT: 5004
    restart: unless-stopped
    ports:
      - "5004:5004"
    depends_on:
      - jellyfish
    networks:
      - jellyfish_network

networks:
  jellyfish_network:
    driver: bridge
