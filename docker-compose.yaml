version: '3.8'

x-fishjam-template: &fishjam-template
  image: "ghcr.io/fishjam-dev/fishjam:${FISHJAM_VERSION:-edge}"
  restart: unless-stopped
  environment: &fishjam-environment
    JF_SERVER_API_TOKEN: ${JF_SERVER_API_TOKEN:-development}
    JF_CHECK_ORIGIN: "${JF_CHECK_ORIGIN:-false}"
    JF_DIST_ENABLED: "${JF_DIST_ENABLED:-true}"
    JF_DIST_NODES: "app@fishjam1 app@fishjam2"
    JF_WEBRTC_TURN_IP: $EXTERNAL_IP
    JF_WEBRTC_TURN_LISTEN_IP: "0.0.0.0"

services:
  fishjam1:
    <<: *fishjam-template
    container_name: fishjam1
    environment:
      <<: *fishjam-environment
      JF_HOST: "${JF1_HOST:-${JF1_IP:-$EXTERNAL_IP}:5002}"
      JF_PORT: 5002
      JF_DIST_NODE_NAME: app@fishjam1
      JF_WEBRTC_TURN_PORT_RANGE: "50000-50100"
      JF_WEBRTC_TURN_TCP_PORT: "49999"
    ports:
      - "5002:5002"
      - "49999:49999"
      - "50000-50100:50000-50100/udp"

  fishjam2:
    <<: *fishjam-template
    restart: unless-stopped
    container_name: fishjam2
    environment:
      <<: *fishjam-environment
      JF_HOST: "${JF2_HOST:-${JF2_IP:-$EXTERNAL_IP}:5003}"
      JF_PORT: 5003
      JF_DIST_NODE_NAME: app@fishjam2
      JF_WEBRTC_TURN_PORT_RANGE: "50101-50200"
      JF_WEBRTC_TURN_TCP_PORT: "49998"
    ports:
      - "5003:5003"
      - "49998:49998"
      - "50101-50200:50101-50200/udp"

  frontend:
    build:
      context: ./assets
      dockerfile: ./Dockerfile
      args:
        FE_BE_HOST: ${BE_HOST:-$DOMAIN:5004}
        FISHJAM_VERSION: ${FISHJAM_VERSION:-0.3.0}
        FISHJAM_ROOM_VERSION: ${FISHJAM_ROOM_VERSION:-build}
    container_name: frontend
    restart: unless-stopped
    depends_on:
      - backend
      - fishjam1
      - fishjam2
    ports:
      - "5005:5005"

  backend:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: backend
    environment:
      BE_PORT: 5004
      BE_HOST: ${BE_HOST:-$DOMAIN}
      BE_PHX_SERVER: "true"
      BE_JF_ADDRESSES: ${BE_JF_ADDRESSES:-fishjam1:5002 fishjam2:5003}
      BE_JF_SECURE_CONNECTION: ${BE_JF_SECURE_CONNECTION:-false}
      BE_JF_SERVER_API_TOKEN: ${JF_SERVER_API_TOKEN:-development}
    restart: unless-stopped
    depends_on:
      - fishjam1
      - fishjam2
    ports:
      - "5004:5004"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - ./infra/grafana/provisioning:/etc/grafana/provisioning
      - grafana-storage:/var/lib/grafana

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./infra/loki/loki-config.yaml:/etc/loki/local-config.yaml
      - loki-data:/loki # Mount a volume for the WAL directory

  grafana-alloy:
    env_file:
      - './.env'
    image: grafana/alloy:latest
    volumes:
      - ./infra/alloy/config.alloy:/etc/alloy/config.alloy
    entrypoint:
      - '/bin/alloy'
      - 'run'
      - '--server.http.listen-addr=0.0.0.0:12345'
      - '--config.extra-args="-config.expand-env"'
      - '${ALLOY_CONFIG_PATH}/${ALLOY_CONFIG_FILE}'
    ports:
      - '${AGENT_PORT}:${AGENT_PORT}'
      - '${AGENT_PORT_APP_RECEIVER}:${AGENT_PORT_APP_RECEIVER}'

volumes:
  grafana-storage:
  loki-data:


