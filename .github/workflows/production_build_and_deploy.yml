name: Production Build and Deploy
on:
  push:
    tags:
      - 'v*.*.*'

env:
  DOMAIN: room.fishjam.stream
  BE_HOST: server.room.fishjam.stream
  PROJECT: production
  COMPOSE_FILE_NAME: docker-compose-deploy.yaml

jobs:
  deploy1:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set versions
        id: versions
        run: |
          cat << EOF >> $GITHUB_OUTPUT
          fishjam_room=${GITHUB_REF#refs/*/}
          fishjam=$(cat .fishjam-version)
          EOF

      - name: Prepare .env file for the deployment
        id: variables_population
        run: |
          echo "DOMAIN=${{env.DOMAIN}} 
          FISHJAM_ROOM_VERSION=${{ steps.versions.outputs.fishjam_room }}
          FISHJAM_VERSION=${{ steps.versions.outputs.fishjam }}
          JF_SERVER_API_TOKEN=${{secrets.SERVER_API_TOKEN_CLOUD_PRODUCTION}}
          BE_HOST=${{env.BE_HOST}}
          BE_JF_SECURE_CONNECTION=true
          BE_JF_ADDRESS=${{vars.JF1_HOST_CLOUD_PRODUCTION}}" > .env

      - name: Remove old containers on first host
        uses: JimCronqvist/action-ssh@master
        with:
          hosts: ${{ secrets.PRODUCTION_IP }}:${{ secrets.SSH_PROD_PORT }}
          privateKey: ${{ secrets.SSH_PRIV_KEY }}
          command: |
            docker ps -aq | xargs -r docker stop | xargs -r docker rm 

      - name: Deploy docker compose to a pre-configured server on first host
        uses: TapTap21/docker-remote-deployment-action@v1.1
        with:
          remote_docker_host: ${{ secrets.PRODUCTION_IP }}
          ssh_private_key: ${{ secrets.SSH_PRIV_KEY }}
          ssh_public_key: ${{ secrets.SSH_PUB_KEY }}
          ssh_port: ${{ secrets.SSH_PROD_PORT }}
          stack_file_name: ${{ env.COMPOSE_FILE_NAME }}
          args: -p ${{ env.PROJECT }} --env-file .env up -d --remove-orphans --build frontend backend
