version: '2.2'

x-jellyfish-template: &jellyfish-template
  image: "ghcr.io/jellyfish-dev/jellyfish:${TAG:-0.1.0-5ef4452}"
  restart: unless-stopped
  environment: &jellyfish-environment
    JF_PORT: 5002
    JF_CHECK_ORIGIN: "${JF_CHECK_ORIGIN:-true}"
    JF_SERVER_API_TOKEN: ${JF_SERVER_API_TOKEN}
    JF_DIST_ENABLED: "${JF_DIST_ENABLED:-true}"
    JF_DIST_NODES: "app@jellyfish1 app@jellyfish2"
    JF_WEBRTC_TURN_LISTEN_IP: "0.0.0.0"
    JF_WEBRTC_TURN_PORT_RANGE: "50000-50500"
    JF_WEBRTC_TURN_TCP_PORT: "49999"
  ports:
    - "5002:5002"
    - "49999:49999"
    - "4369:4369" # EPMD
    - "9000:9000"
    - "9568:9568"
    - "50000-50500:50000-50500/udp"

services:
  jellyfish1:
    <<: *jellyfish-template
    container_name: jellyfish1
    environment:
      <<: *jellyfish-environment
      JF_HOST: "${JF1_HOST:-$JF1_IP}"
      JF_DIST_NODE_NAME: app@$JF1_IP
      JF_DIST_NODES: "app@$JF1_IP app@$JF2_IP"
      JF_WEBRTC_TURN_IP: "${JF1_IP}"

  jellyfish2:
    <<: *jellyfish-template
    container_name: jellyfish2
    environment:
      <<: *jellyfish-environment
      JF_HOST: "${JF2_HOST:-$JF2_IP}"
      JF_DIST_NODE_NAME: app@$JF2_IP
      JF_DIST_NODES: "app@$JF1_IP app@$JF2_IP"
      JF_WEBRTC_TURN_IP: "${JF2_IP}"

  frontend:
    build:
      context: ./assets
      dockerfile: ./Dockerfile
      args:
        BE_HOST: ${BE_HOST:-$DOMAIN:5004}
    container_name: frontend
    restart: unless-stopped
    depends_on:
      - backend
      - jellyfish1
    ports:
      - "5005:5005"

  backend:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: backend
    environment:
      BE_PORT: 5004
      BE_HOST: ${BE_HOST:-$DOMAIN}
      BE_PHX_SERVER: "true"
      BE_JF_SECURE_CONNECTION: ${BE_JF_SECURE_CONNECTION:-false}
      BE_JF_SERVER_API_TOKEN: ${JF_SERVER_API_TOKEN}
      BE_JF_ADDRESSES: ${BE_JF_ADDRESSES:-$JF1_IP:5002 $JF2_IP:5002}
    restart: unless-stopped
    depends_on:
      - jellyfish1
    ports:
      - "5004:5004"

  prometheus:
    build:
      context: ./prometheus
      dockerfile: Dockerfile
      args:
        TARGETS: ${PROMETHEUS_TARGETS:-jellyfish1:9568,jellyfish2:9568}
    container_name: prometheus
    restart: on-failure
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    volumes:
      - prometheus_data:/prometheus
    depends_on:
      - jellyfish1

  grafana:
    build:
      context: ./grafana
      dockerfile: Dockerfile
    container_name: grafana
    restart: on-failure
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "${GF_SECURITY_ADMIN_PASSWORD}"
      GF_SECURITY_ADMIN_USER: "${GF_SECURITY_ADMIN_USER}"
    ports:
      - '3000:3000'
    expose:
      - 3000

volumes:
  grafana_data: {}
  prometheus_data: {}
